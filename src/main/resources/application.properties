#ZK configuration
#property | default | example(s) | description
#-------- | ------- | ------- | -----------
#`zk.springboot-packaging`      | `jar`   | `war`/`jar`       | package as jar or war file
#`zk.homepage`                  | empty   | `home`/`main`     | when set will setup a @GetMapping for "/" to return the configured view-name
#`zk.zul-view-resolver-enabled` | `true`  | `true`/`false`    | enable/disable InternalViewResolver for zul files
#`zk.zul-view-resolver-prefix`  | empty   | `/zul`            | prefix prepended to a view name (i.e. a folder inside the web resource package on the classpath)
#`zk.zul-view-resolver-suffix`  | `.zul`  | `.zul`/`.zhtml`   | usually `.zul` does what you need
#`zk.richlet-filter-mapping`    | empty   | `/richlets/*`     | filter-mapping string as the basepath for richlets
#`zk.websockets-enabled=true`   | `true`  | `true`/`false`    | enable/disable websockets (available in ZK-EE)
#`zk.servlet3-push-enabled=true`| `true`  | `true`/`false`    | enable/disable servlet3 CometServerPush (available in ZK-EE)
#`zk.update-uri`                | `/zkau` | `/mypath`         | configure servlet path for ZK's update engine (rarely used)
#
#### zk.homepage
#Shortcut configuration to enable a Spring MVC Controller with a @GetMapping for the root path '/' returning the configured view name. (disabled by default).
#The default zul-view-resolver config will prepend the the servlet mapping for ZK's update engine (default `/zkau`) and append the `.zul`-extension to locate the zul file in your application.
#
#### zk.zul-view-resolver-*
#Defines a simple InternalViewResolver resolving view names to zul files inside the class-web package (not required but still possible for `war` packaging)
#
#The defaults above have the following effect, given the get mapping:
#```java
#	@GetMapping("/demo")
#	public String demo() {
#		return "views/demo";
#	}
#```
#Resolves to `/zkau/web/views/demo.zul`
#ZK's UpdateServlet will locate the file on the classpath e.g. in `src/main/resources/web/views/demo.zul`
#A configured prefix e.g. `/myprefix` will be inserted before the view name: `/zkau/web[/myprefix]/views/demo.zul`
#
#### zk.richlet-filter-mapping
#Enables [ZK's RichletFilter](https://www.zkoss.org/wiki/ZK_Developer's_Reference/UI_Composing/Richlet#Turn_on_Richlet) the value has to be a servlet filter mapping such as: `/richlet/*`
#Requires additional [richlet-mappings configured in zk.xml](https://www.zkoss.org/wiki/ZK_Configuration_Reference/zk.xml/The_richlet-mapping_Element).
zk.springboot-packaging=jar
zk.homepage=login
zk.zul-view-resolver-enabled=true
zk.zul-view-resolver-prefix=
zk.zul-view-resolver-suffix=.zul
zk.richlet-filter-mapping=
zk.websockets-enabled=true
zk.servlet3-push-enabled=true
zk.update-uri=/zkau

##spring boot
#############Tomcat configuration
# Maximum queue length for incoming connection requests when all possible request processing threads are in use.
server.tomcat.accept-count=1000
#Whether to buffer output such that it is flushed only periodically.
server.tomcat.accesslog.buffered=false
#Directory in which log files are created. Can be absolute or relative to the Tomcat base dir.
server.tomcat.accesslog.directory=logs/access_log
#Enable access log.
server.tomcat.accesslog.enabled=true
#Date format to place in the log file name.
server.tomcat.accesslog.file-date-format=.yyyy-MM-dd
#Format pattern for access logs.
server.tomcat.accesslog.pattern=common
#Log file name prefix.
server.tomcat.accesslog.prefix=access_log
#Whether to defer inclusion of the date stamp in the file name until rotate time.
server.tomcat.accesslog.rename-on-rotate=false
#Set request attributes for the IP address, Hostname, protocol, and port used for the request.
server.tomcat.accesslog.request-attributes-enabled=true
#Whether to enable access log rotation.
server.tomcat.accesslog.rotate=true
#Log file name suffix.
server.tomcat.accesslog.suffix=.log
#Maximum number of connections that the server accepts and processes at any given time.
#server.tomcat.max-connections=0
#Maximum size, in bytes, of the HTTP message header.
#server.tomcat.max-http-header-size=5000000
#Maximum size, in bytes, of the HTTP post content.
server.tomcat.max-http-form-post-size=5000000
#Maximum number of worker threads.
server.tomcat.threads.max=0
#Tomcat base directory. If not specified, a temporary directory is used.
#server.tomcat.basedir=/home/appgame
server.tomcat.basedir = D:\\LinhLH\\workspace
spring.messages.encoding=UTF-8
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true
server.servlet.encoding.force=true
server.servlet.session.timeout=30m
#server.servlet.session.cookie.http-only=true
#server.servlet.session.cookie.secure=true
##server
#server.contextPath = /
server.port        = 8084
#thiendia, vinslot
#server.port        = 8184
server.tomcat.uri-encoding=UTF-8

spring.jackson.property-naming-strategy = CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES
